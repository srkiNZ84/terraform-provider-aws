---
subcategory: "Security Lake"
layout: "aws"
page_title: "AWS: aws_securitylake_aws_log_source"
description: |-
  Terraform resource for managing an Amazon Security Lake AWS Log Source.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_securitylake_aws_log_source

Terraform resource for managing an Amazon Security Lake AWS Log Source.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.securitylake_aws_log_source import SecuritylakeAwsLogSource
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SecuritylakeAwsLogSource(self, "test",
            source=[SecuritylakeAwsLogSourceSource(
                accounts=["123456789012"],
                regions=["eu-west-1"],
                source_name="ROUTE53",
                source_version="1.0"
            )
            ]
        )
```

## Argument Reference

The following arguments are required:

* `source` - (Required) Specify the natively-supported AWS service to add as a source in Security Lake.

`source` supports the following:

* `accounts` - (Optional) Specify the AWS account information where you want to enable Security Lake.
* `regions` - (Required) Specify the Regions where you want to enable Security Lake.
* `source_name` - (Required) The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
* `source_version` - (Optional) The version for a AWS source. This must be a Regionally unique value.

## Attribute Reference

This resource exports no additional attributes.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import AWS log sources using the source name. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.securitylake_aws_log_source import SecuritylakeAwsLogSource
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        SecuritylakeAwsLogSource.generate_config_for_import(self, "example", "ROUTE53")
```

Using `terraform import`, import AWS log sources using the source name. For example:

```console
% terraform import aws_securitylake_aws_log_source.example ROUTE53
```

<!-- cache-key: cdktf-0.20.1 input-ee1a170608deb904f09e1ba901701686ec29394191b588406f73bc8dadef1e52 -->