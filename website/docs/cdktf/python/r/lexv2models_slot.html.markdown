---
subcategory: "Lex V2 Models"
layout: "aws"
page_title: "AWS: aws_lexv2models_slot"
description: |-
  Terraform resource for managing an AWS Lex V2 Models Slot.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_lexv2models_slot

Terraform resource for managing an AWS Lex V2 Models Slot.

## Example Usage

### Basic Usage

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lexv2_models_slot import Lexv2ModelsSlot
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Lexv2ModelsSlot(self, "example",
            bot_id=Token.as_string(aws_lexv2_models_bot_example.id),
            bot_version=Token.as_string(aws_lexv2_models_bot_version_example.bot_version),
            intent_id=Token.as_string(aws_lexv2_models_intent_example.id),
            locale_id=Token.as_string(aws_lexv2_models_bot_locale_example.locale_id),
            name="example"
        )
```

## Argument Reference

The following arguments are required:

* `bot_id` - (Required) Identifier of the bot associated with the slot.
* `bot_version` - (Required) Version of the bot associated with the slot.
* `intent_id` - (Required) Identifier of the intent that contains the slot.
* `locale_id` - (Required) Identifier of the language and locale that the slot will be used in.
* `name` - (Required) Name of the slot.
* `value_elicitation_setting` - (Required) Prompts that Amazon Lex sends to the user to elicit a response that provides the value for the slot.

The following arguments are optional:

* `description` - (Optional) Description of the slot.
* `multiple_values_setting` - (Optional) Whether the slot returns multiple values in one response. See the [`multiple_values_setting` argument reference](#multiple_values_setting-argument-reference) below.
* `obfuscation_setting` - (Optional) Determines how slot values are used in Amazon CloudWatch logs. See the [`obfuscation_setting` argument reference](#obfuscation_setting-argument-reference) below.
* `slot_type_id` - (Optional) Unique identifier for the slot type associated with this slot.
* `sub_slot_setting` - (Optional) Specifications for the constituent sub slots and the expression for the composite slot.

### `multiple_values_setting` Argument Reference

* `allow_multiple_values` - (Optional) Whether a slot can return multiple values. When `true`, the slot may return more than one value in a response. When `false`, the slot returns only a single value. Multi-value slots are only available in the `en-US` locale.

### `obfuscation_setting` Argument Reference

* `obfuscation_setting_type` - (Required) Whether Amazon Lex obscures slot values in conversation logs. Valid values are `DefaultObfuscation` and `None`.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `id` - A comma-delimited string concatenating `bot_id`, `bot_version`, `intent_id`, `locale_id`, and `slot_id`.
* `slot_id` - Unique identifier associated with the slot.

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

* `create` - (Default `30m`)
* `update` - (Default `30m`)
* `delete` - (Default `30m`)

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Lex V2 Models Slot using the `id`. For example:

```python
# DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.lexv2_models_slot import Lexv2ModelsSlot
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        Lexv2ModelsSlot.generate_config_for_import(self, "example", "bot-1234,1,intent-5678,en-US,slot-9012")
```

Using `terraform import`, import Lex V2 Models Slot using the `id`. For example:

```console
% terraform import aws_lexv2models_slot.example bot-1234,1,intent-5678,en-US,slot-9012
```

<!-- cache-key: cdktf-0.20.1 input-cc601a6503397999e8f928de214fd706c67dee8ddb04fcb1b1da6c645607f7f5 -->